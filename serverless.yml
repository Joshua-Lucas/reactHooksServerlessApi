service: reacthooksexample
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: '2'

custom:
  tableName: 'courses-table-${self:provider.stage}'

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws

  runtime: nodejs12.x
  region: us-west-2
  lambdaHashingVersion: 20201221
  iam:
    role: 
      statements: 
        - Effect: 'Allow'
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
          Resource:
            - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: src/api/api.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: Title
            AttributeType: S
        KeySchema:
          - AttributeName: CourseId
            KeyType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1