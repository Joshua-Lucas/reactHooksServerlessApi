service: reacthooksexample

custom:
  tableName: "course-table-${self:provider.stage}"

frameworkVersion: "2"

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  lambdaHashingVersion: 20201221
  environment:
    COURSE_TABLE: ${self:custom.tableName}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.COURSE_TABLE}"

functions:
  api:
    handler: src/api/api.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"
resources:
  Resources:
    UsersTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: title
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
